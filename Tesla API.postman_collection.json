{
	"info": {
		"_postman_id": "57f08d62-cfa1-4ae3-90a2-047b65328dda",
		"name": "Tesla API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Request Tesla Access Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "state",
							"value": "{{requestState}}",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "teslaToken_{{$isoTimestamp}}",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "ownerapi",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "authorization_code_with_pkce",
							"type": "string"
						},
						{
							"key": "client_authentication",
							"value": "body",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "{{tokenEndPoint}}token",
							"type": "string"
						},
						{
							"key": "authUrl",
							"value": "{{tokenEndPoint}}authorize",
							"type": "string"
						},
						{
							"key": "clientSecret",
							"value": "{{clientsecret}}",
							"type": "string"
						},
						{
							"key": "scope",
							"value": "openid email offline_access",
							"type": "string"
						},
						{
							"key": "redirect_uri",
							"value": "https://auth.tesla.com/void/callback",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "Wake Vehicle",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"    var isValid = true;\r",
							"    var todaysDate = new Date();\r",
							"\r",
							"    pm.test(\"Vehicle On-Line Check\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.response.state).to.eql('online');\r",
							"    });\r",
							"\r",
							"    pm.test(\"Valid Token Check\", function () {\r",
							"        if (todaysDate.getTime() > pm.environment.get(\"tokenValidUntil\")) {\r",
							"            console.log(\"Token has expired.\");\r",
							"            isValid = false;\r",
							"        }\r",
							"        else {\r",
							"            console.log(\"Token valid until: \" + pm.environment.get(\"readableValidUntilDate\"));\r",
							"        }\r",
							"        pm.expect(isValid).to.eql(true);\r",
							"    });"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{endPoint}}/api/1/vehicles/{{teslaVehicleIdS}}/wake_up",
					"host": [
						"{{endPoint}}"
					],
					"path": [
						"api",
						"1",
						"vehicles",
						"{{teslaVehicleIdS}}",
						"wake_up"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Vehicle Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var isValid = true;\r",
							"var todaysDate = new Date();\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"if (jsonData.response.charge_state.charging_state == \"Complete\" || jsonData.response.charge_state.charging_state == \"Stopped\")  {\r",
							"    console.log(\"Charing State: \" + jsonData.response.charge_state.charging_state + \", \" + \"Charge Data: \" + jsonData.response.charge_state.charge_energy_added + \", Odometer: \" + jsonData.response.vehicle_state.odometer + \", battery range: \" + jsonData.response.charge_state.battery_range + \", estimated range: \" + jsonData.response.charge_state.est_battery_range + \", ideal range: \" + jsonData.response.charge_state.ideal_battery_range + \", outside temp: \" + jsonData.response.climate_state.outside_temp);\r",
							"} else {\r",
							"    console.log(\"Still charging. Time to full charge: \" + jsonData.response.charge_state.time_to_full_charge);\r",
							"}\r",
							"\r",
							"pm.test(\"Valid Token Check\", function () {\r",
							"        if (todaysDate.getTime() > pm.environment.get(\"tokenValidUntil\")) {\r",
							"            console.log(\"Token has expired.\");\r",
							"            isValid = false;\r",
							"        }\r",
							"        else {\r",
							"            console.log(\"Token valid until: \" + pm.environment.get(\"readableValidUntilDate\"));\r",
							"        }\r",
							"        pm.expect(isValid).to.eql(true);\r",
							"    });\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endPoint}}/api/1/vehicles/{{teslaVehicleIdS}}/vehicle_data",
					"host": [
						"{{endPoint}}"
					],
					"path": [
						"api",
						"1",
						"vehicles",
						"{{teslaVehicleIdS}}",
						"vehicle_data"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Vehicles",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var isValid = true;\r",
							"var todaysDate = new Date();\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var vehicleIdS = jsonData.response[0].id_s;\r",
							"//set environment variable for use in all other APIs  \r",
							"pm.environment.set(\"teslaVehicleIdS\", vehicleIdS);\r",
							"\r",
							"pm.test(\"Valid Token Check\", function () {\r",
							"        if (todaysDate.getTime() > pm.environment.get(\"tokenValidUntil\")) {\r",
							"            console.log(\"Token has expired.\");\r",
							"            isValid = false;\r",
							"        }\r",
							"        else {\r",
							"            console.log(\"Token valid until: \" + pm.environment.get(\"readableValidUntilDate\"));\r",
							"        }\r",
							"        pm.expect(isValid).to.eql(true);\r",
							"    });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endPoint}}api/1/vehicles",
					"host": [
						"{{endPoint}}api"
					],
					"path": [
						"1",
						"vehicles"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Drive State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var isValid = true;\r",
							"var todaysDate = new Date();\r",
							"\r",
							"pm.test(\"Valid Token Check\", function () {\r",
							"        if (todaysDate.getTime() > pm.environment.get(\"tokenValidUntil\")) {\r",
							"            console.log(\"Token has expired.\");\r",
							"            isValid = false;\r",
							"        }\r",
							"        else {\r",
							"            console.log(\"Token valid until: \" + pm.environment.get(\"readableValidUntilDate\"));\r",
							"        }\r",
							"        pm.expect(isValid).to.eql(true);\r",
							"    });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endPoint}}/api/1/vehicles/{{teslaVehicleIdS}}/data_request/drive_state",
					"host": [
						"{{endPoint}}"
					],
					"path": [
						"api",
						"1",
						"vehicles",
						"{{teslaVehicleIdS}}",
						"data_request",
						"drive_state"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Charge State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var isValid = true;\r",
							"var todaysDate = new Date();\r",
							"\r",
							"pm.test(\"Valid Token Check\", function () {\r",
							"        if (todaysDate.getTime() > pm.environment.get(\"tokenValidUntil\")) {\r",
							"            console.log(\"Token has expired.\");\r",
							"            isValid = false;\r",
							"        }\r",
							"        else {\r",
							"            console.log(\"Token valid until: \" + pm.environment.get(\"readableValidUntilDate\"));\r",
							"        }\r",
							"        pm.expect(isValid).to.eql(true);\r",
							"    });\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{endPoint}}api/1/vehicles/{{teslaVehicleIdS}}/data_request/charge_state",
					"host": [
						"{{endPoint}}api"
					],
					"path": [
						"1",
						"vehicles",
						"{{teslaVehicleIdS}}",
						"data_request",
						"charge_state"
					]
				}
			},
			"response": []
		},
		{
			"name": "Refresh Tesla Access Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var MonthAbbr = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"];\r",
							"const characters ='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r",
							"var c_s;\r",
							"\r",
							"function generateString(length) {\r",
							"    let result = '';\r",
							"    const charactersLength = characters.length;\r",
							"    for ( let i = 0; i < length; i++ ) {\r",
							"        result += characters.charAt(Math.floor(Math.random() * charactersLength));\r",
							"    }\r",
							"\r",
							"    return result;\r",
							"}\r",
							"\r",
							"var todaysDate = new Date();\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"access_token\",jsonData.access_token);\r",
							"\r",
							"var expiresIn = jsonData.expires_in;\r",
							"var tokenValidUntil = todaysDate.setTime(todaysDate.getTime() + (expiresIn * 1000));\r",
							"pm.environment.set(\"tokenValidUntil\",tokenValidUntil);\r",
							"\r",
							"var validUntilDate = new Date(tokenValidUntil);\r",
							"var readableValidUntilDate = validUntilDate.getDate().toString().padStart(2,\"0\") + \r",
							"\" \" + MonthAbbr[validUntilDate.getMonth()] + \r",
							"\" \" + validUntilDate.getFullYear() + \r",
							"\" \" + validUntilDate.getHours().toString().padStart(2,\"0\") + \r",
							"\":\" + validUntilDate.getMinutes().toString().padStart(2,\"0\") + \r",
							"\":\" + validUntilDate.getSeconds().toString().padStart(2,\"0\");\r",
							"pm.environment.set(\"readableValidUntilDate\",readableValidUntilDate);\r",
							"\r",
							"console.log (\"valid until: \" + readableValidUntilDate);\r",
							"\r",
							"//update requestState\r",
							"c_s = generateString(16);\r",
							"pm.environment.set(\"requestState\",c_s);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"grant_type\": \"refresh_token\",\r\n  \"refresh_token\": \"{{refresh_token}}\",\r\n  \"client_id\": \"ownerapi\",\r\n  \"client_secret\": \"{{client_secret}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{tokenEndPoint}}token",
					"host": [
						"{{tokenEndPoint}}token"
					]
				}
			},
			"response": []
		}
	]
}